(function(){var l;"use strict";const u="[modern-screenshot]",a=typeof window<"u"?(l=window.navigator)==null?void 0:l.userAgent:"",d=a.includes("Chrome");a.includes("AppleWebKit"),a.includes("Firefox");const f=(...e)=>console.warn(u,...e);function w(e,r){return new Promise((n,o)=>{const t=new FileReader;t.onload=()=>n(t.result),t.onerror=()=>o(t.error),t.onabort=()=>o(new Error(`Failed read blob to ${r}`)),r==="dataUrl"?t.readAsDataURL(e):r==="arrayBuffer"&&t.readAsArrayBuffer(e)})}const b=e=>w(e,"dataUrl");function h(e){const{url:r,timeout:n,responseType:o,...t}=e,i=new AbortController,R=n?setTimeout(()=>i.abort(),n):void 0;return fetch(r,{signal:i.signal,...t}).then(s=>{if(!s.ok)throw new Error("Failed fetch, not 2xx response",{cause:s});switch(o){case"dataUrl":return s.blob().then(b);case"text":default:return s.text()}}).finally(()=>clearTimeout(R))}const c=self;c.onmessage=async e=>{const r=e.data,n=r.rawUrl||r.url;try{const o=await h(r);c.postMessage({url:n,result:o})}catch(o){f(o),c.postMessage({url:n})}}})();
